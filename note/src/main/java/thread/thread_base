Java多线程基础

    1、多线程程序在较低层次上扩展了多任务的概念，一个程序可以同时执行多个任务。通常，每一个任务成为一个线程（Thread）,它是线程控制的简称。
       可以同时运行一个以上的线程的程序称为多线程程序。

    2、线程与进程的区别：
        1）、一个进程可以拥有多个线程
        2）、每个进程拥有自己的一整套变量，而线程则共享数据
        3）、在某些操作系统中，，与进程相比较，线程更轻量级，创建，撤销一个线程，比启动新进程的开销要小的多


    3、实现线程的三种方式：
        1）、实现Runnable接口：最常用的方式 run方法，Thread类实现了Runnable接口。
        2）、继承Thread类：调用该类的start方法启动线程进入就绪状态。
        3）、通过Callable和Future创建线程

        小结：
            1）、Thread是JDK实现的对线程支持的类，Thread类本身实现了Runnable接口，所以Runnable是显示创建线程必须实现的接口; Runnable只有一个run方法，
                 所以不管通过哪种方式创建线程，都必须实现run方法。

            2）、写一个类继承自Thread类，重写run方法。用start方法启动线程。
                 写一个类实现Runnable接口，实现run方法。用new Thread(Runnable target).start方法来启动。


    4、单线程：
        任何程序至少有一个线程，即使你没有主动创建线程，程序从一开始就有一个默认的线程，被称为主线程，只有一个线程的程序被成为单线程程序。
        如下面这一简单的代码，没有显示地创建一个线程，程序从main开始执行，main本身就是一个线程(主线程)，单个线程从头执行到尾。

        public static void main(String args[]) {
          System.out.println("输出从1到100的数:");
          for (int i = 0; i < 100; i ++) {
             System.out.println(i + 1);
          }
        }

    5、JAVA中线程通常有五种状态：创建、就绪、运行、阻塞和死亡

            1）、创建状态：在生成线程对象，并没有调用该对象的start方法，这是线程处于创建状态
            2）、就绪状态：调用了线程的start方法之后该线程就进入了就绪状态，但是，此时线程调度还没有   把该线程设置为当前线程。
                           此时处于就绪状态。在线程运行之后，从等待或者睡眠中回来之后，也会处于就绪状态。
            3）、运行状态：线程调度将处于就绪状态的线程设置为当前线程，此时线程进入了运行状态，开始运行run函数中的代码。
            4）、阻塞状态：线程正在运行的时候，被暂停，通常是为了等待某个时间的发生（比如说某项资源就绪）之后再继续运行。
                 sleep,suspend,wait等方法都可以导致线程阻塞。
            5）、死亡状态：如果一个线程的run方法执行结束或者调用stop方法后，该线程就会死亡。对于已经死亡的线程，无法再使用
                 start方法令其进入就绪。

     6、多线程原理：
            相当于玩游戏机，只有一个游戏机（cpu），可是有很多人要玩，于是，start是排队！等CPU选中你就是轮到你，你就run（），当CPU的运行的时间片执行完，
            这个线程就继续排队，等待下一次的run（）。
            调用start（）后，线程会被放到等待队列，等待CPU调度，并不一定要马上开始执行，只是将这个线程置于可运行状态。然后通过JVM，
            线程Thread会调用run（）方法，执行本线程的线程体。先调用start后调用run，这么麻烦，为了不直接调用run？就是为了实现多线程的优点，
            没这个start不行。

     7、start方法和run方法：

             1）、start（）方法来启动线程，真正实现了多线程运行。这时无需等待run方法体代码执行完毕，可以直接继续执行下面的代码；
                  通过调用Thread类的start()方法来启动一个线程， 这时此线程是处于就绪状态， 并没有运行。 然后通过此Thread类调用方法run()来完成其运行操作的，
                  这里方法run()称为线程体，它包含了要执行的这个线程的内容， run方法运行结束， 此线程终止。然后CPU再调度其它线程。

             2）、run（）方法当作普通方法的方式调用。程序还是要顺序执行，要等待run方法体执行完毕后，才可继续执行下面的代码；
                  程序中只有主线程——这一个线程， 其程序执行路径还是只有一条， 这样就没有达到写线程的目的。


     8：理解：多线程就是分时利用CPU，宏观上让所有线程一起执行 ，也叫并发。